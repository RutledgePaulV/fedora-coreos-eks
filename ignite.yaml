variant: fcos
version: 1.0.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-rsa MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAl/3eCOX49/a1aM9M7N3dTwcCzSQBCGiskY7X9WZqOdyWQQsM0EfiwBzysg/UuUK+p5/lGEQxFsn3jsAYAMaXrQ/y3BNJt5XfSkMlNrKtDH02ZPGjIPSWqH9wB50F+4BhrEk5MgBYkCO7tWEBbryoG9OcvGfwonoRuuXX4ElD9FbFb3zi96hbByIPvEfv+cnwFuGbOVy2iCFk2UJgArbszmg+q3CJE4rHnesnVbYLjrczJ9kQTK4UQ7Gkp8RQ3tOKAR+L1z8z0zmdA7jz3R6JSeYLzOUmfsl+WhlerHq2XhYNuVQrL8Anckpr1S3a4BOotAUz8aeAg3zNKRBjBzzVLwIDAQAB
storage:
  files:
    - path: /var/lib/kubelet/kubeconfig
      contents:
        inline: |
        apiVersion: v1
        kind: Config
        clusters:
        - cluster:
            certificate-authority: ${CERTIFICATE_AUTHORITY_FILE}
            server: ${MASTER_ENDPOINT}
          name: kubernetes
        contexts:
        - context:
            cluster: kubernetes
            user: kubelet
          name: kubelet
        current-context: kubelet
        users:
        - name: kubelet
          user:
            exec:
              apiVersion: client.authentication.k8s.io/v1alpha1
              command: /usr/bin/aws-iam-authenticator
              args:
                - "token"
                - "-i"
                - "${CLUSTER_NAME}"
      mode: 0644
    - path: /usr/bin/kubelet
      contents:
        source: https://dl.k8s.io/v1.13.8/kubernetes-node-linux-amd64.tar.gz
        compression: gzip
        verification:
          hash: sha512-bdd5ea8bd426ce3f90853c786215327bbd83b78c0cb262d4a16aec97facf901aaa1a0bf1425ed626f95e138b559d9e655e64303281834a35aa44d5cda31f9287
      mode: 0644
    - path: /usr/bin/aws-iam-authenticator
      contents:
        source: https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
        verification:
          hash: sha256-cc35059999bad461d463141132a0e81906da6c23953ccdac59629bb532c49c83
      mode: 0644
systemd:
  units:
    - name: kubelet.service
      enabled: true
      contents: |
      [Unit]
      Description=Kubernetes Kubelet
      Documentation=https://github.com/kubernetes/kubernetes
      After=docker.service
      Requires=docker.service
      [Service]
      ExecStart=/usr/bin/kubelet \
        --address=0.0.0.0 \
        --authentication-token-webhook \
        --authorization-mode=Webhook \
        --allow-privileged=true \
        --cloud-provider=aws \
        --cluster-dns=${DNS_CLUSTER_IP} \
        --cluster-domain=cluster.local \
        --cni-bin-dir=/usr/libexec/cni \
        --cni-conf-dir=/etc/cni/net.d \
        --container-runtime=docker \
        --max-pods=${MAX_PODS} \
        --node-ip=${INTERNAL_IP} \
        --network-plugin=cni \
        --pod-infra-container-image=602401143452.dkr.ecr.${REGION}.amazonaws.com/eks/pause-amd64:3.1 \
        --cgroup-driver=cgroupfs \
        --register-node=true \
        --kubeconfig=/var/lib/kubelet/kubeconfig \
        --feature-gates=RotateKubeletServerCertificate=true \
        --anonymous-auth=false \
        --client-ca-file=${CLIENT_CA_FILE}

      Restart=on-failure
      RestartSec=5
      [Install]
      WantedBy=multi-user.target